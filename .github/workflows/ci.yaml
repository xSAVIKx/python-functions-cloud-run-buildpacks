name: CI

on:
  push:


env:
  POETRY_VERSION: '1.3.2'
  PYTHON_VERSION: '3.11.3'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  run-checks:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        shell: bash
        run: |
          poetry install
      - name: Run Black
        shell: bash
        run: |
          poetry run black . --check --diff --color
      - name: Run tests
        shell: bash
        run: poetry run pytest --cov="python_functions_cloud_run_buildpacks" --cov-branch -m "not manual" tests
        env:
          COVERAGE_FILE: ".coverage"
        working-directory: "${{ inputs.moduleFolder }}${{ inputs.moduleName }}"
      - name: Store Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: "coverage"
          path: ".coverage"
          retention-days: 3
      - name: Run MyPy checks
        shell: bash
        run: |
          poetry run mypy . --show-error-context --pretty --namespace-packages --explicit-package-bases

  build-container:
    runs-on: ubuntu-22.04
    needs: [ 'run-checks' ]
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        shell: bash
        run: |
          poetry install
      - name: Setup pack
        uses: buildpacks/github-actions/setup-pack@v5.2.0
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build Container
        shell: bash
        run: |
          ./build.sh
        env:
          FULL_IMAGE_NAME: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
